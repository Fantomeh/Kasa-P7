{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin2\\\\Documents\\\\GitHub\\\\P7 Kasa\\\\kasa\\\\src\\\\components\\\\ExpandableSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../Styles/ExpandableSection.css';\n\n// Définissez le composant ExpandableSection, qui prend un titre et des enfants en tant que props\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpandableSection = _ref => {\n  _s();\n  let {\n    title,\n    children\n  } = _ref;\n  // Utilisez l'état pour déterminer si la section est ouverte ou fermée\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Créez un gestionnaire d'événements pour gérer le clic sur le titre\n  const handleClick = () => {\n    // Basculer l'état isOpen à chaque clic\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Expandable\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      onClick: handleClick,\n      style: {\n        cursor: 'pointer'\n      },\n      className: \"Expandable-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpandableSection, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = ExpandableSection;\nexport default ExpandableSection;\nvar _c;\n$RefreshReg$(_c, \"ExpandableSection\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExpandableSection","_ref","_s","title","children","isOpen","setIsOpen","handleClick","className","onClick","style","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin2/Documents/GitHub/P7 Kasa/kasa/src/components/ExpandableSection.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../Styles/ExpandableSection.css';\r\n\r\n// Définissez le composant ExpandableSection, qui prend un titre et des enfants en tant que props\r\nconst ExpandableSection = ({ title, children }) => {\r\n  // Utilisez l'état pour déterminer si la section est ouverte ou fermée\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  // Créez un gestionnaire d'événements pour gérer le clic sur le titre\r\n  const handleClick = () => {\r\n    // Basculer l'état isOpen à chaque clic\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <div className='Expandable'>\r\n      {/* Affichez le titre et attachez le gestionnaire d'événements onClick */}\r\n      <h3 onClick={handleClick} style={{ cursor: 'pointer' }} className='Expandable-title'>\r\n        {title}\r\n      </h3>\r\n      {/* Si la section est ouverte, affichez les enfants */}\r\n      {isOpen && <div>{children}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpandableSection;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iCAAiC;;AAExC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,iBAAiB,GAAGC,IAAA,IAAyB;EAAAC,EAAA;EAAA,IAAxB;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAH,IAAA;EAC5C;EACA,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;;EAE3C;EACA,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxB;IACAD,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,oBACEN,OAAA;IAAKS,SAAS,EAAC,YAAY;IAAAJ,QAAA,gBAEzBL,OAAA;MAAIU,OAAO,EAAEF,WAAY;MAACG,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAU,CAAE;MAACH,SAAS,EAAC,kBAAkB;MAAAJ,QAAA,EACjFD;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACH,EAEJV,MAAM,iBAAIN,OAAA;MAAAK,QAAA,EAAMA;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC5B;AAEV,CAAC;AAACb,EAAA,CApBIF,iBAAiB;AAAAgB,EAAA,GAAjBhB,iBAAiB;AAsBvB,eAAeA,iBAAiB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}