{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin2\\\\Documents\\\\GitHub\\\\P7 Kasa\\\\kasa\\\\src\\\\components\\\\ExpandableSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../Styles/ExpandableSection.css';\nimport minifleche from '../img/minifleche.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpandableSection = _ref => {\n  _s();\n  let {\n    id,\n    title,\n    children\n  } = _ref;\n  // Utilisez un objet pour stocker l'état d'ouverture de chaque instance par ID\n  const [openStates, setOpenStates] = useState({});\n\n  // Créez un gestionnaire d'événements pour gérer le clic sur le titre\n  const handleClick = () => {\n    // Basculer l'état isOpen à chaque clic pour l'instance spécifique en utilisant l'ID\n    setOpenStates(prevOpenStates => ({\n      ...prevOpenStates,\n      [id]: !prevOpenStates[id]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Expandable\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleClick,\n      style: {\n        cursor: 'pointer',\n        display: 'flex',\n        alignItems: 'center'\n      },\n      className: \"Expandable-Top\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Expandable-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: minifleche,\n        alt: \"Toggle\",\n        className: \"Expandable-img\",\n        style: {\n          marginLeft: 'auto',\n          transform: openStates[id] ? 'rotate(180deg)' : 'rotate(0)',\n          transition: 'transform 0.3s ease-in-out'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), openStates[id] && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Expandable-text\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpandableSection, \"bTesiauxVGHUyWB+miAsOAprt50=\");\n_c = ExpandableSection;\nexport default ExpandableSection;\nvar _c;\n$RefreshReg$(_c, \"ExpandableSection\");","map":{"version":3,"names":["React","useState","minifleche","jsxDEV","_jsxDEV","ExpandableSection","_ref","_s","id","title","children","openStates","setOpenStates","handleClick","prevOpenStates","className","onClick","style","cursor","display","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","marginLeft","transform","transition","_c","$RefreshReg$"],"sources":["C:/Users/Admin2/Documents/GitHub/P7 Kasa/kasa/src/components/ExpandableSection.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../Styles/ExpandableSection.css';\r\nimport minifleche from '../img/minifleche.png';\r\n\r\nconst ExpandableSection = ({ id, title, children }) => {\r\n  // Utilisez un objet pour stocker l'état d'ouverture de chaque instance par ID\r\n  const [openStates, setOpenStates] = useState({});\r\n\r\n  // Créez un gestionnaire d'événements pour gérer le clic sur le titre\r\n  const handleClick = () => {\r\n    // Basculer l'état isOpen à chaque clic pour l'instance spécifique en utilisant l'ID\r\n    setOpenStates((prevOpenStates) => ({\r\n      ...prevOpenStates,\r\n      [id]: !prevOpenStates[id],\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className='Expandable'>\r\n      <div\r\n        onClick={handleClick}\r\n        style={{ cursor: 'pointer', display: 'flex', alignItems: 'center' }}\r\n        className='Expandable-Top'\r\n      >\r\n        <h3 className='Expandable-title'>{title}</h3>\r\n        <img\r\n          src={minifleche}\r\n          alt='Toggle'\r\n          className='Expandable-img'\r\n          style={{\r\n            marginLeft: 'auto',\r\n            transform: openStates[id] ? 'rotate(180deg)' : 'rotate(0)',\r\n            transition: 'transform 0.3s ease-in-out',\r\n          }}\r\n        />\r\n      </div>\r\n      {/* Utilisez l'état openStates pour déterminer si l'instance spécifique est ouverte */}\r\n      {openStates[id] && <div className='Expandable-text'>{children}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpandableSection;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iCAAiC;AACxC,OAAOC,UAAU,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,iBAAiB,GAAGC,IAAA,IAA6B;EAAAC,EAAA;EAAA,IAA5B;IAAEC,EAAE;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAJ,IAAA;EAChD;EACA,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhD;EACA,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxB;IACAD,aAAa,CAAEE,cAAc,KAAM;MACjC,GAAGA,cAAc;MACjB,CAACN,EAAE,GAAG,CAACM,cAAc,CAACN,EAAE;IAC1B,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACEJ,OAAA;IAAKW,SAAS,EAAC,YAAY;IAAAL,QAAA,gBACzBN,OAAA;MACEY,OAAO,EAAEH,WAAY;MACrBI,KAAK,EAAE;QAAEC,MAAM,EAAE,SAAS;QAAEC,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAS,CAAE;MACpEL,SAAS,EAAC,gBAAgB;MAAAL,QAAA,gBAE1BN,OAAA;QAAIW,SAAS,EAAC,kBAAkB;QAAAL,QAAA,EAAED;MAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAC7CpB,OAAA;QACEqB,GAAG,EAAEvB,UAAW;QAChBwB,GAAG,EAAC,QAAQ;QACZX,SAAS,EAAC,gBAAgB;QAC1BE,KAAK,EAAE;UACLU,UAAU,EAAE,MAAM;UAClBC,SAAS,EAAEjB,UAAU,CAACH,EAAE,CAAC,GAAG,gBAAgB,GAAG,WAAW;UAC1DqB,UAAU,EAAE;QACd;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,EAELb,UAAU,CAACH,EAAE,CAAC,iBAAIJ,OAAA;MAAKW,SAAS,EAAC,iBAAiB;MAAAL,QAAA,EAAEA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChE;AAEV,CAAC;AAACjB,EAAA,CApCIF,iBAAiB;AAAAyB,EAAA,GAAjBzB,iBAAiB;AAsCvB,eAAeA,iBAAiB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}